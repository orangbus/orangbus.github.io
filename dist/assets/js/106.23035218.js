(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{613:function(a,s,e){"use strict";e.r(s);var t=e(11),r=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"laradock-elasticsearch启动失败"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#laradock-elasticsearch启动失败"}},[a._v("#")]),a._v(" laradock-elasticsearch启动失败")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("sudo sysctl -w vm.max_map_count=524288\n")])])]),e("h2",{attrs:{id:"laradock安装ik分词器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#laradock安装ik分词器"}},[a._v("#")]),a._v(" laradock安装ik分词器")]),a._v(" "),e("p",[a._v("1、进入 "),e("code",[a._v("laradock/elasticsearch")]),a._v(" 修改 "),e("code",[a._v("Dockerfile")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ARG ELK_VERSION\nFROM elasticsearch:${ELK_VERSION}\n\n# 添加下面一行安装命令\nRUN /usr/share/elasticsearch/bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.9.1/elasticsearch-analysis-ik-7.9.1.zip\n\nEXPOSE 9200 9300\n")])])]),e("p",[a._v("注意：ik分词器的版本要和elasticsearch的版本是一致的，不然会报错.")]),a._v(" "),e("p",[a._v("可以先通过 "),e("code",[a._v("docker images | grep elassticsearch")]),a._v(" 查看一下search的版本")]),a._v(" "),e("hr"),a._v(" "),e("p",[a._v("考虑到在我天朝下载github的东西会比较慢，可以先下载ik再copy进去")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("mkdir -p pathto/laradock/elasticsearch/plugins\n\n|-- Dockerfile\n`-- plugins\n    `-- elasticsearch-analysis-ik-7.9.1.zip\n\n")])])]),e("p",[a._v("修改 "),e("code",[a._v("elasticsearch/Dockerfile")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("COPY ./plugins/elasticsearch-analysis-ik-7.9.1.zip /usr/share/elasticsearch/plugins\n")])])]),e("p",[a._v("2、重新 build")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker-compose build elasticsearch\n")])])]),e("p",[a._v("3、最后，查看是否安装成功：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("docker-compose "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" elasticsearch /usr/share/elasticsearch/bin/elasticsearch-plugin list\n")])])]),e("p",[a._v("ik分词器Github：https://github.com/medcl/elasticsearch-analysis-ik/tree/v7.9.1")]),a._v(" "),e("h2",{attrs:{id:"跨域"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[a._v("#")]),a._v(" 跨域")]),a._v(" "),e("p",[a._v("修改 "),e("code",[a._v("elasticsearch/Dockerfile")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('RUN cat <<<\nhttp.cors.enabled: true\nhttp.cors.allow-origin: "*"\n>>> >> /usr/share/elasticsearch/config/elasticsearch.yml\n')])])]),e("h2",{attrs:{id:"分布式部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分布式部署"}},[a._v("#")]),a._v(" 分布式部署")]),a._v(" "),e("p",[a._v("server1")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("http.port: 8300\ncluster.name: search //标识集群\nnode.name: master\nnode.master: true\n")])])]),e("p",[a._v("node1")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('http.port: 8301\ncluster.name: search //标识集群\nnode.name: node1\nnode.master: false\ndiscovery.zen.ping.unicast.hosts: ["127.0.0.1"] // 自动发现主节点\n')])])]),e("h1",{attrs:{id:"字段类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字段类型"}},[a._v("#")]),a._v(" 字段类型")]),a._v(" "),e("p",[e("code",[a._v("keyword")]),a._v(" 类型的字段不会被分词")]),a._v(" "),e("p",[e("code",[a._v("match")]),a._v(" 会使用分词器")]),a._v(" "),e("h2",{attrs:{id:"精确匹配"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#精确匹配"}},[a._v("#")]),a._v(" 精确匹配")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('GET arc/_search\n{\n  "query": {\n    "term": {\n      "name": "张三 王五"\n    }\n  }\n}\n')])])]),e("h2",{attrs:{id:"模糊查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模糊查询"}},[a._v("#")]),a._v(" 模糊查询")]),a._v(" "),e("p",[a._v("多个条件使用空格分开")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('GET arc/_search\n{\n  "query": {\n    "match": {\n      "name": "张三 王五"\n    }\n  }\n}\n')])])]),e("h2",{attrs:{id:"字段限制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字段限制"}},[a._v("#")]),a._v(" 字段限制")]),a._v(" "),e("blockquote",[e("p",[a._v('"_source": ["name","age"]')])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('GET arc/_search\n{\n  "query": {\n    "match": {\n      "name": "王三"\n    }\n  },\n  "_source": ["name","age"]\n}\n')])])]),e("h2",{attrs:{id:"排序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[a._v("#")]),a._v(" 排序")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('GET arc/_search\n{\n  "query": {\n    "match": {\n      "name": "王三"\n    }\n  },\n  "sort": [\n    {\n      "age": {\n        "order": "desc"\n      }\n    }\n  ]\n}\n')])])]),e("h2",{attrs:{id:"分页"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分页"}},[a._v("#")]),a._v(" 分页")]),a._v(" "),e("blockquote",[e("p",[a._v("form: 起始值")]),a._v(" "),e("p",[a._v("size: limit")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('GET arc/_search\n{\n  "query": {\n    "match": {\n      "name": "王三"\n    }\n  },\n  "from": 0,\n  "size": 2\n}\n')])])])])}),[],!1,null,null,null);s.default=r.exports}}]);