(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{652:function(e,v,t){"use strict";t.r(v);var _=t(11),o=Object(_.a)({},(function(){var e=this,v=e.$createElement,t=e._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Vuetify的自定义色彩和更换色彩主题非常方便。")]),e._v(" "),t("ol",[t("li",[t("a",{attrs:{href:"#con1"}},[e._v("1 色彩")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#con11"}},[e._v("1.1 JS代码控制主题颜色")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#con12"}},[e._v("1.2 StylusCSS预处理器自定义颜色")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#con2"}},[e._v("2 主题")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#con21"}},[e._v("2.1 Light and Dark风格")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#con22"}},[e._v("2.2 主题颜色对象")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#con23"}},[e._v("2.3 动态更换主题颜色")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#con3"}},[e._v("3 基础样式")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#con31"}},[e._v("3.1 内容样式")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#con32"}},[e._v("3.2 文字样式")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#con4"}},[e._v("4 辅助样式")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#con41"}},[e._v("4.1 display相关样式")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#con42"}},[e._v("4.2 z轴特效")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#con43"}},[e._v("4.3 外边距和内边距控制")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#con44"}},[e._v("4.4 文字对齐")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#con5"}},[e._v("5 滚动 scroll")])])]),e._v(" "),t("h1",{attrs:{id:"_1-色彩"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-色彩"}},[e._v("#")]),e._v(" 1 色彩")]),e._v(" "),t("p",[e._v("Vuetify使用了"),t("a",{attrs:{href:"https://material.io/design/color/#color-usage-palettes",target:"_blank",rel:"noopener noreferrer"}},[e._v("扁平化设计指导色彩"),t("OutboundLink")],1),e._v("中的2014 Material Design color palettes版本的色彩。")]),e._v(" "),t("p",[e._v("按照"),t("a",{attrs:{href:"https://vuetifyjs.com/en/framework/colors#material-colors",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方文档中的Material colors"),t("OutboundLink")],1),e._v("，Vuetify中一共可以直接使用的色彩有：")]),e._v(" "),t("ol",[t("li",[t("code",[e._v("red lighten-{1 to 5} darken-{1 to 4} accent-{1 to 4}")])]),e._v(" "),t("li",[t("code",[e._v("pink lighten-{1 to 5} darken-{1 to 4} accent-{1 to 4}")])]),e._v(" "),t("li",[t("code",[e._v("purple lighten-{1 to 5} darken-{1 to 4} accent-{1 to 4}")])]),e._v(" "),t("li",[t("code",[e._v("deep-purple lighten-{1 to 5} darken-{1 to 4} accent-{1 to 4}")])]),e._v(" "),t("li",[t("code",[e._v("indigo lighten-{1 to 5} darken-{1 to 4} accent-{1 to 4}")])]),e._v(" "),t("li",[t("code",[e._v("blue lighten-{1 to 5} darken-{1 to 4} accent-{1 to 4}")])]),e._v(" "),t("li",[t("code",[e._v("light-blue lighten-{1 to 5} darken-{1 to 4} accent-{1 to 4}")])]),e._v(" "),t("li",[t("code",[e._v("cyan lighten-{1 to 5} darken-{1 to 4} accent-{1 to 4}")])]),e._v(" "),t("li",[t("code",[e._v("teal lighten-{1 to 5} darken-{1 to 4} accent-{1 to 4}")])]),e._v(" "),t("li",[t("code",[e._v("green lighten-{1 to 5} darken-{1 to 4} accent-{1 to 4}")])]),e._v(" "),t("li",[t("code",[e._v("light-green lighten-{1 to 5} darken-{1 to 4} accent-{1 to 4}")])]),e._v(" "),t("li",[t("code",[e._v("lime lighten-{1 to 5} darken-{1 to 4} accent-{1 to 4}")])]),e._v(" "),t("li",[t("code",[e._v("yellow lighten-{1 to 5} darken-{1 to 4} accent-{1 to 4}")])]),e._v(" "),t("li",[t("code",[e._v("amber lighten-{1 to 5} darken-{1 to 4} accent-{1 to 4}")])]),e._v(" "),t("li",[t("code",[e._v("orange lighten-{1 to 5} darken-{1 to 4} accent-{1 to 4}")])]),e._v(" "),t("li",[t("code",[e._v("deep-orange lighten-{1 to 5} darken-{1 to 4} accent-{1 to 4}")])]),e._v(" "),t("li",[t("code",[e._v("brown lighten-{1 to 5} darken-{1 to 4} accent-{1 to 4}")])]),e._v(" "),t("li",[t("code",[e._v("blue-grey lighten-{1 to 5} darken-{1 to 4} accent-{1 to 4}")])]),e._v(" "),t("li",[t("code",[e._v("grey lighten-{1 to 5} darken-{1 to 4} accent-{1 to 4}")])]),e._v(" "),t("li",[t("code",[e._v("shades black white transparent")])])]),e._v(" "),t("p",[e._v("一共有19套扁平化风格的色系。每一种颜色有一个主色，然后有浅色调五种颜色，深色调四种颜色和四种额外颜色的扩展，即每一系颜色有14种供选择，非常方便。")]),e._v(" "),t("p",[e._v("最后的"),t("code",[e._v("shades")]),e._v("系列是基础的纯黑，纯白和透明颜色三种。")]),e._v(" "),t("p",[e._v("预定义的这些颜色通过同名的CSS类就可以直接使用：")]),e._v(" "),t("ol",[t("li",[t("code",[e._v('<div class="red">')]),e._v("，定义背景颜色为主色彩")]),e._v(" "),t("li",[t("code",[e._v('<span class="red--text">')]),e._v("，定义文字颜色为主色彩")]),e._v(" "),t("li",[t("code",[e._v('<span class="red--lighten-2">')]),e._v("，定义背景颜色为扩展颜色")]),e._v(" "),t("li",[t("code",[e._v('<span class="red--text text--accent-2">')]),e._v("，定义文字颜色为扩展颜色")])]),e._v(" "),t("p",[e._v("在选择的颜色的时候，每种颜色的主色调对应"),t("a",{attrs:{href:"https://material.io/design/color/#color-usage-palettes",target:"_blank",rel:"noopener noreferrer"}},[e._v("扁平化设计指导色彩"),t("OutboundLink")],1),e._v("中的500号颜色，浅色对应50-400号颜色，深色对应600-900号颜色。"),t("br"),e._v(" "),t("code",[e._v("accent")]),e._v("系列颜色是100，200，400，700号颜色的变体，主要用于一些副标题或者色块区域。在设计网页的时候，基本上还是从50-900号颜色中来挑选主题色彩所需要的颜色。")]),e._v(" "),t("h3",{attrs:{id:"_1-1-js代码控制主题颜色"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-js代码控制主题颜色"}},[e._v("#")]),e._v(" 1.1 JS代码控制主题颜色")]),e._v(" "),t("p",[e._v("这里就要稍微接触一下主题色彩了，如果用过其他的前端UI库比如Bootstrap4，里边的色彩通常会写成"),t("code",[e._v("xxx-primary")]),e._v("，其中的"),t("code",[e._v("primary")]),e._v("就是主题色彩变量。")]),e._v(" "),t("p",[e._v("主题色彩变量的好处是可以到处复用，然后通过更改主题颜色的变量值，可以方便的更换整个应用的颜色风格。")]),e._v(" "),t("p",[e._v("Vuetify能够在加载插件的时候，手工直接指定主题颜色：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import Vue from 'vue'\nimport Vuetify from 'vuetify'\n\nimport colors from 'vuetify/es5/util/colors'\n\nVue.use(Vuetify, {\n  theme: {\n    primary: colors.orange.darken2,\n    secondary: colors.lightGreen.lighten4,\n    accent: colors.indigo.base\n  }\n})\n\n")])])]),t("p",[t("code",[e._v("primary")]),e._v("等基础颜色变量的使用方法和具体颜色一样，比如"),t("code",[e._v('class="accent--text text--lighten-2"')])]),e._v(" "),t("h3",{attrs:{id:"_1-2-styluscss预处理器控制主题颜色"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-styluscss预处理器控制主题颜色"}},[e._v("#")]),e._v(" 1.2 StylusCSS预处理器控制主题颜色")]),e._v(" "),t("p",[e._v("Stylus就和SASS之类都是预处理器。在前边的JS代码中，如果导入colors对象，会让整个JS文件的体积增大30Kb左右。如果只是想使用一些特定的颜色，可以通过修改Vuetify的stylus文件来关闭导入颜色对象。这需要手工关闭，然后在导入主stylus文件。")]),e._v(" "),t("p",[e._v("由于使用stylus预处理器不是重点，而且对于我们不是非常专业的前端，没有必要在颜色方面自定义太多东西，这里就看"),t("a",{attrs:{href:"https://vuetifyjs.com/en/framework/colors#stylus-color-pack",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方文档"),t("OutboundLink")],1),e._v("吧。")]),e._v(" "),t("h1",{attrs:{id:"_2-主题色彩"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-主题色彩"}},[e._v("#")]),e._v(" 2 主题色彩")]),e._v(" "),t("p",[e._v("上一节已经看过了主题色彩，其实就是一套固定名称的色彩变量。Vuetify提供了如下几个方面可以快速改变应用的主题色彩。")]),e._v(" "),t("h3",{attrs:{id:"_2-1-light-and-dark风格"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-light-and-dark风格"}},[e._v("#")]),e._v(" 2.1 Light and Dark风格")]),e._v(" "),t("p",[e._v("直接在"),t("code",[e._v("v-app")]),e._v("上设置"),t("code",[e._v("dark")]),e._v("属性可以让大部分应用组件的底色都变成黑色。不设置则默认是亮色主题。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<v-app dark>\n...\n</v-app>\n\n")])])]),t("h3",{attrs:{id:"_2-2-主题颜色对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-主题颜色对象"}},[e._v("#")]),e._v(" 2.2 主题颜色对象")]),e._v(" "),t("p",[e._v("在上一节中，引入Vuetify插件的时候传入的配置对象中的"),t("code",[e._v("theme")]),e._v("对象，就是主题颜色对象。Vuetify提供了一个"),t("a",{attrs:{href:"https://theme-generator.vuetifyjs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("主题色彩生成器"),t("OutboundLink")],1),e._v("，进去选好需要的七种色彩，就可以生成直接可供导入的对象或者对应color对象的代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("{\n    primary: #3f51b5,\n    secondary: #673ab7,\n    accent: #e91e63,\n    error: #f44336,\n    warning: #ff5722,\n    info: #4caf50,\n    success: #607d8b\n}\n\n")])])]),t("p",[e._v("或者：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import colors from 'vuetify/es5/util/colors'\n\n{\n    primary: colors.indigo.base,\n    secondary: colors.deep-purple.base,\n    accent: colors.pink.base,\n    error: colors.red.base,\n    warning: colors.deep-orange.base,\n    info: colors.green.base,\n    success: colors.blue-grey.base\n}\n\n")])])]),t("p",[e._v("有了这个对象就可以方便的更换颜色风格。")]),e._v(" "),t("p",[e._v("在传入对象的时候，也可以只传部分颜色名称，没有传入的颜色会使用默认颜色。")]),e._v(" "),t("h3",{attrs:{id:"_2-3-动态更换主题颜色"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-动态更换主题颜色"}},[e._v("#")]),e._v(" 2.3 动态更换主题颜色")]),e._v(" "),t("p",[e._v("刚才的对象都是在App启动的时候传入的。Vuetify通过"),t("code",[e._v("this.$vuetify.theme")]),e._v("对象可以直接访问和设置色彩变量的名称。")]),e._v(" "),t("p",[e._v("比如给之前在学习Grid系统的时候写的导航栏增加一个改变文字颜色的按钮：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<button @click=\"changeColor\">改变颜色</button>\n<script>\n    new Vue({\n        el: '#app',\n        // ...此处省略...\n        methods: {\n            changeColor : function () {\n                this.$vuetify.theme.primary = '#FF9800'\n            }\n        }\n    })\n<\/script>\n\n")])])]),t("p",[e._v("按了这个按钮，就会把所有文字的颜色变成橙色（A标签的文字默认使用"),t("code",[e._v("primary")]),e._v("颜色）。")]),e._v(" "),t("p",[e._v("主题的内容除了上述这些之外，还有一些可以在传入"),t("code",[e._v("theme")]),e._v("对象的时候自定义类似"),t("code",[e._v("primary.base")]),e._v("或者"),t("code",[e._v("primary.darken1")]),e._v("的方法，就是使用嵌套的对象。")]),e._v(" "),t("p",[e._v("此外还有服务端渲染的内容，以及自定义颜色变量等内容，有兴趣的可以看"),t("a",{attrs:{href:"https://vuetifyjs.com/en/framework/theme#options",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方文档"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h1",{attrs:{id:"_3-基础样式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-基础样式"}},[e._v("#")]),e._v(" 3 基础样式")]),e._v(" "),t("p",[e._v("Vuetify对一些HTML标签应用了一些特殊样式，此外还提供了一些CSS类用于控制文字展示。")]),e._v(" "),t("h3",{attrs:{id:"_3-1-内容样式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-内容样式"}},[e._v("#")]),e._v(" 3.1 内容样式")]),e._v(" "),t("p",[e._v("已经定义了预置样式的HTML元素有：")]),e._v(" "),t("ol",[t("li",[t("code",[e._v("blockquote")]),e._v("，blockquote元素，其中的内容会自动应用样式，字体大小为18px，带有上下padding")]),e._v(" "),t("li",[t("code",[e._v("p")]),e._v("，标准P元素，字体大小为14px，带有下margin")]),e._v(" "),t("li",[t("code",[e._v("var")]),e._v("，表示变量，会自动应用斜体，14px")]),e._v(" "),t("li",[t("code",[e._v("code")]),e._v("，会自动应用样式，等宽字体，13px")]),e._v(" "),t("li",[t("code",[e._v("kbd")]),e._v("，13px，背景为浅黑色，等宽字体")])]),e._v(" "),t("p",[e._v("这些样式直接使用对应的标签包围内容即可。无需额外在标签上定义CSS类。")]),e._v(" "),t("h3",{attrs:{id:"_3-2-文字样式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-文字样式"}},[e._v("#")]),e._v(" 3.2 文字样式")]),e._v(" "),t("p",[e._v("Vuetify提供了一系列类，用于将文字规范到扁平化设计的文字规范，主要有是四个方面的内容：字体大小，字体重量，字体转换，字体包裹。")]),e._v(" "),t("p",[e._v("字体大小提供了一系列CSS类用于将指定的文字转换成符合扁平化设计的文字大小，这些字体大小的CSS类可以用于任何文字对象上，但最好还是和语义化的HTML标签一起使用：")]),e._v(" "),t("ol",[t("li",[t("code",[e._v(".display-4")]),e._v("，设置文字为112px，通常搭配"),t("code",[e._v("h1")]),e._v("元素使用")]),e._v(" "),t("li",[t("code",[e._v(".display-3")]),e._v("，设置文字为56px，通常搭配"),t("code",[e._v("h2")]),e._v("元素使用")]),e._v(" "),t("li",[t("code",[e._v(".display-2")]),e._v("，设置文字为45px，通常搭配"),t("code",[e._v("h3")]),e._v("元素使用")]),e._v(" "),t("li",[t("code",[e._v(".display-1")]),e._v("，设置文字为34px，通常搭配"),t("code",[e._v("h4")]),e._v("元素使用")]),e._v(" "),t("li",[t("code",[e._v(".headline")]),e._v("，设置文字为24px，通常搭配"),t("code",[e._v("h5")]),e._v("元素使用")]),e._v(" "),t("li",[t("code",[e._v(".title")]),e._v("，设置文字为20px，通常搭配"),t("code",[e._v("h6")]),e._v("元素使用")]),e._v(" "),t("li",[t("code",[e._v(".subheading")]),e._v("，设置文字为16px，通常在标题作为副标题使用")]),e._v(" "),t("li",[t("code",[e._v(".body-2")]),e._v("，设置文字为14px，字重500，通常作为正文使用")]),e._v(" "),t("li",[t("code",[e._v(".body-1")]),e._v("，设置文字为14px，通常作为正文使用")]),e._v(" "),t("li",[t("code",[e._v(".caption")]),e._v("，设置文字为12px，通常作为辅助文字使用")])]),e._v(" "),t("p",[e._v("除了"),t("code",[e._v(".body-2")]),e._v("，都是普通字重。")]),e._v(" "),t("p",[e._v("Vuetify支持的字重对应关系是：")]),e._v(" "),t("ol",[t("li",[t("code",[e._v(".font-weight-thin")]),e._v("，对应100")]),e._v(" "),t("li",[t("code",[e._v(".font-weight-light")]),e._v("，对应300")]),e._v(" "),t("li",[t("code",[e._v(".font-weight-regular")]),e._v("，对应400")]),e._v(" "),t("li",[t("code",[e._v(".font-weight-medium")]),e._v("，对应500")]),e._v(" "),t("li",[t("code",[e._v(".font-weight-bold")]),e._v("，对应700")]),e._v(" "),t("li",[t("code",[e._v(".font-weight-black")]),e._v("，对应900")])]),e._v(" "),t("p",[e._v("字重选择的支持也得益于Vuetify默认的Roboto字体支持的字重种类比较多。")]),e._v(" "),t("p",[t("code",[e._v(".font-italic")]),e._v("类用于斜体。")]),e._v(" "),t("p",[e._v("文本转换也有几个类，用于转换大小写：")]),e._v(" "),t("ol",[t("li",[t("code",[e._v(".text-capitalize")]),e._v("，设置首字母大写")]),e._v(" "),t("li",[t("code",[e._v(".text-lowercase")]),e._v("，设置英文为小写")]),e._v(" "),t("li",[t("code",[e._v(".text-none")]),e._v("，不进行转换")]),e._v(" "),t("li",[t("code",[e._v(".text-uppercase")]),e._v("，设置大写")]),e._v(" "),t("li",[t("code",[e._v(".font-weight-bold")]),e._v("，对应700")]),e._v(" "),t("li",[t("code",[e._v(".font-weight-black")]),e._v("，对应900")])]),e._v(" "),t("p",[e._v("最后是外边容器是否截断文字的两个类：")]),e._v(" "),t("ol",[t("li",[t("code",[e._v(".text-no-wrap")]),e._v("，设置whitespace属性为nowrap")]),e._v(" "),t("li",[t("code",[e._v(".text-truncate")]),e._v("，截断超出的文字")])]),e._v(" "),t("h1",{attrs:{id:"_4-辅助样式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-辅助样式"}},[e._v("#")]),e._v(" 4 辅助样式")]),e._v(" "),t("p",[e._v("除了基础的预置样式和文字样式之外，Vuetify也提供了很多辅助类用于微调样式。")]),e._v(" "),t("h3",{attrs:{id:"_4-1-display相关样式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-display相关样式"}},[e._v("#")]),e._v(" 4.1 display相关样式")]),e._v(" "),t("p",[e._v("这里的样式主要是与"),t("code",[e._v("display")]),e._v("属性相关，用于控制可见性，溢出和元素的显示框类型。")]),e._v(" "),t("p",[e._v("可见性的写法是："),t("code",[e._v("hidden-{breakpoint}-{condition}")]),e._v("。")]),e._v(" "),t("p",[e._v("其中的"),t("code",[e._v("breakpoint")]),e._v("是断点的代码，"),t("code",[e._v("{condition}")]),e._v("部分是条件，有三个选项：")]),e._v(" "),t("ol",[t("li",[t("code",[e._v("only")]),e._v("，仅在断点对应的屏幕宽度范围内生效")]),e._v(" "),t("li",[t("code",[e._v("and-down")]),e._v("，断点和更小的屏幕宽度")]),e._v(" "),t("li",[t("code",[e._v("and-up")]),e._v("，断点和更大的屏幕宽度")])]),e._v(" "),t("p",[e._v("此外还可以使用媒体类型，控制元素在不同的情况下可见，比如"),t("code",[e._v("hidden-screen-only")]),e._v("控制仅在屏幕上不可见，"),t("code",[e._v("hidden-print-only")]),e._v("控制仅在打印时不可见。")]),e._v(" "),t("p",[e._v("溢出的处理有三个类：")]),e._v(" "),t("ol",[t("li",[t("code",[e._v("overflow-hidden")]),e._v("，不显示所有溢出部分")]),e._v(" "),t("li",[t("code",[e._v("overflow-y-hidden")]),e._v("，不显示竖直方向的溢出")]),e._v(" "),t("li",[t("code",[e._v("overflow-x-hidden")]),e._v("，不显示水平方向的溢出")])]),e._v(" "),t("p",[e._v("最后是控制元素的显示框类型，在Grid部分的几个排版元素的API中已经见过这种类型的CSS样式类。这些类如下：")]),e._v(" "),t("ol",[t("li",[t("code",[e._v("d-inline-flex")])]),e._v(" "),t("li",[t("code",[e._v("d-flex")])]),e._v(" "),t("li",[t("code",[e._v("d-inline-block")])]),e._v(" "),t("li",[t("code",[e._v("d-block")])]),e._v(" "),t("li",[t("code",[e._v("d-inline")])]),e._v(" "),t("li",[t("code",[e._v("d-none")])])]),e._v(" "),t("p",[e._v("类名一看就知道效果是什么。利用"),t("code",[e._v("display")]),e._v("相关样式，很容易就可以做出一个随着屏幕宽度减少，导航条内容不断减少的效果：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<div id="app">\n    <v-app>\n        <v-container>\n            <v-layout wrap :class="classObject" >\n                <v-flex xs1 class="hidden-xs-only">\n                    <div style="text-align: center;"><a href="#">Home</a></div>\n                </v-flex>\n                <v-flex xs1 class="hidden-sm-and-down">\n                    <div style="text-align: center;"><a href="#">Products</a></div>\n                </v-flex>\n                <v-flex xs1 class="hidden-md-and-down">\n                    <div style="text-align: center;"><a href="#">Contact</a></div>\n                </v-flex>\n                <v-flex xs1 class="hidden-lg-and-down">\n                    <div style="text-align: center;"><a href="#">About</a></div>\n                </v-flex>\n            </v-layout>\n        </v-container>\n    </v-app>\n</div>\n\n')])])]),t("h3",{attrs:{id:"_4-2-z轴特效"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-z轴特效"}},[e._v("#")]),e._v(" 4.2 z轴特效")]),e._v(" "),t("p",[e._v("Vuetify中对于标准CSS中的"),t("code",[e._v("z-index")]),e._v("属性进行重新设计，使用elevation-{n}标识z轴的层级，并且自动设置对应的样式。")]),e._v(" "),t("p",[e._v("层级一共有25种，用0-24表示，所以这个CSS类就是从"),t("code",[e._v("elevation-0")]),e._v("到"),t("code",[e._v("elevation-24")]),e._v("。")]),e._v(" "),t("p",[e._v("每一个层级都会设置不同的样式，看上去就像是离页面越来越远。可以看官网的"),t("a",{attrs:{href:"https://vuetifyjs.com/en/framework/elevation#playground",target:"_blank",rel:"noopener noreferrer"}},[e._v("例子"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h3",{attrs:{id:"_4-3-外边距和内边距控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-外边距和内边距控制"}},[e._v("#")]),e._v(" 4.3 外边距和内边距控制")]),e._v(" "),t("p",[e._v("Vuetify的文档还是很细致的，我记得Bootstrap4可能也有类似的类，但是都没在文档里仔细提过。")]),e._v(" "),t("p",[e._v("控制外边距和内边距的CSS类是"),t("code",[e._v("{property}{direction}-{size}")]),e._v("。来分别看看其中的三个内容：")]),e._v(" "),t("ol",[t("li",[t("code",[e._v("property")]),e._v("，可以设置为"),t("code",[e._v("m")]),e._v("和"),t("code",[e._v("p")]),e._v("，分别表示外边距"),t("code",[e._v("margin")]),e._v("和内边距"),t("code",[e._v("padding")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("direction")]),e._v("设置如下：\n"),t("ol",[t("li",[t("code",[e._v("t")]),e._v("表示"),t("code",[e._v("top")])]),e._v(" "),t("li",[t("code",[e._v("b")]),e._v("表示"),t("code",[e._v("bottom")])]),e._v(" "),t("li",[t("code",[e._v("l")]),e._v("表示"),t("code",[e._v("left")])]),e._v(" "),t("li",[t("code",[e._v("r")]),e._v("表示"),t("code",[e._v("right")])]),e._v(" "),t("li",[t("code",[e._v("x")]),e._v("表示同时"),t("code",[e._v("right")]),e._v("和"),t("code",[e._v("left")])]),e._v(" "),t("li",[t("code",[e._v("y")]),e._v("表示同时"),t("code",[e._v("top")]),e._v("和"),t("code",[e._v("bottom")])]),e._v(" "),t("li",[t("code",[e._v("a")]),e._v("表示所有方向")])])]),e._v(" "),t("li",[t("code",[e._v("size")]),e._v("设置如下：\n"),t("ol",[t("li",[t("code",[e._v("auto")]),e._v("表示"),t("code",[e._v("auto")])]),e._v(" "),t("li",[t("code",[e._v("0")]),e._v("表示"),t("code",[e._v("0")])]),e._v(" "),t("li",[t("code",[e._v("1")]),e._v("表示"),t("code",[e._v("$spacer")]),e._v("代表的宽度*0.25，默认是4px")]),e._v(" "),t("li",[t("code",[e._v("2")]),e._v("表示"),t("code",[e._v("$spacer")]),e._v("代表的宽度*0.5，默认是8px")]),e._v(" "),t("li",[t("code",[e._v("3")]),e._v("表示"),t("code",[e._v("$spacer")]),e._v("代表的宽度，默认是16px")]),e._v(" "),t("li",[t("code",[e._v("4")]),e._v("表示"),t("code",[e._v("$spacer")]),e._v("代表的宽度*1.5，默认是24px")]),e._v(" "),t("li",[t("code",[e._v("5")]),e._v("表示"),t("code",[e._v("$spacer")]),e._v("代表的宽度*3，默认是48px")])])])]),e._v(" "),t("p",[e._v("掌握了原始的CSS样式的话，使用这个类很容易。")]),e._v(" "),t("h3",{attrs:{id:"_4-4-文字对齐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-文字对齐"}},[e._v("#")]),e._v(" 4.4 文字对齐")]),e._v(" "),t("p",[e._v("控制文字对齐的CSS样式类是"),t("code",[e._v("text-{breakpoint}-{position}")]),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("{position}")]),e._v("可以选择的是"),t("code",[e._v("right")]),e._v("，"),t("code",[e._v("left")]),e._v("和"),t("code",[e._v("center")]),e._v("。")]),e._v(" "),t("p",[e._v("需要说明的是这个样式类的工作特点和断点是一样的，即如果想让一个元素的文字在所有情况下都居中，需要设置成"),t("code",[e._v("text-xs-center")]),e._v("，会自动覆盖掉所有更大宽度的屏幕。")]),e._v(" "),t("h1",{attrs:{id:"_5-滚动-scroll"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-滚动-scroll"}},[e._v("#")]),e._v(" 5 滚动 scroll")]),e._v(" "),t("p",[e._v("Vuetify提供了"),t("code",[e._v("$vuetify.goto(target, options)")]),e._v("这样一个方法用于控制滚动。")]),e._v(" "),t("p",[e._v("其中"),t("code",[e._v("target")]),e._v("可以是一个数字，表示距离页面顶端的像素距离；还可以是一个CSS选择器字符串或者一个元素的引用，用来滚动到指定的元素处。")]),e._v(" "),t("p",[e._v("其中"),t("code",[e._v("options")]),e._v("则是一个配置对象，其中的属性有"),t("code",[e._v("duration")]),e._v("表示时间，"),t("code",[e._v("easing")]),e._v("表示缓和曲线效果，"),t("code",[e._v("offset")]),e._v("表示上下偏移量，"),t("code",[e._v("container")]),e._v("暂时不知道表示什么。")]),e._v(" "),t("p",[t("code",[e._v("$vuetify.goto(target, options)")]),e._v("是在任意Vue组件中都可以访问的，极大的提高了灵活性。")]),e._v(" "),t("p",[e._v("光说不练假把式，官网的"),t("a",{attrs:{href:"https://vuetifyjs.com/en/framework/scroll#usage",target:"_blank",rel:"noopener noreferrer"}},[e._v("例子"),t("OutboundLink")],1),e._v("其实很不错，但是没有明确的看到传入的参数。")]),e._v(" "),t("p",[e._v("可以做一个页面来简单的看一下效果：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<div id="app">\n    <v-app id="inspire">\n        <v-container>\n            <v-layout>\n                <v-btn color="primary" @click="scroll1">滚动到1000像素</v-btn>\n                <v-btn color="primary" class="text-none" @click="scroll2">滚动到id="p2"的元素处</v-btn>\n                <v-btn color="primary" @click="scroll3" class="text-none">滚动到ref="saner"的元素处</v-btn>\n            </v-layout>\n            <v-layout row wrap>\n                <v-flex xs12>\n                    <p style="height: 1500px" id="p1">1st consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?</p>\n                </v-flex>\n                <v-flex  xs12>\n                    <p style="height: 1500px" id="p2">1st consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?</p>\n                </v-flex>\n                <v-flex xs12>\n                    <p style="height: 1500px" ref="saner" id="p3">1st consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?</p>\n                </v-flex>\n            </v-layout>\n\n        </v-container>\n    </v-app>\n</div>\n<script>\n    new Vue({\n        el: \'#app\',\n        methods:{\n            scroll1:function () {\n                this.$vuetify.goTo(1000, {\n                    duration: 300,\n                    easing: "easeInOutCubic",\n                    offset: 700});\n            },\n            scroll2:function () {\n                this.$vuetify.goTo(\'#p2\', {});\n            },\n            scroll3:function () {\n                this.$vuetify.goTo(this.$refs.saner, {});\n            },\n\n        }\n    })\n<\/script>\n\n')])])]),t("p",[e._v("这个页面里有三个按钮，然后是三个高1500像素的段落。")]),e._v(" "),t("p",[e._v("第一个按钮是滚动到距离页面顶部1000像素的位置，然后加上了配置参数，"),t("code",[e._v("duration: 300")]),e._v("我感觉了一下应该是0.3秒左右；"),t("code",[e._v("easing")]),e._v("属性直接传入字符串即可。"),t("code",[e._v("offset")]),e._v("数值为正数的时候，表示从1000像素的位置，往页面上方偏移700像素，也就是实际上只会移动到距离页面顶部300像素的位置。如果是负数就是往页面下方偏移了。")]),e._v(" "),t("p",[e._v("第二个按钮采用CSS选择器，选中的是"),t("code",[e._v('id="p2"')]),e._v("的元素，会直接滚动到对应元素的地方。")]),e._v(" "),t("p",[e._v("第二个按钮采用一个DOM对象的方式，使用了Vue的"),t("code",[e._v("ref")]),e._v("属性的特性，通过"),t("code",[e._v("this.$refs.saner")]),e._v("选中第三个段落元素，会直接滚动到该元素处。")]),e._v(" "),t("p",[t("code",[e._v("easing")]),e._v("属性可以使用的字符串有如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("linear\neaseInQuad\neaseOutQuad\neaseInOutQuad\neaseInCubic\neaseOutCubic\neaseInOutCubic\neaseInQuart\neaseOutQuart\neaseInOutQuart\neaseInQuint\neaseOutQuint\neaseInOutQuint\n\n")])])]),t("p",[e._v("现在VuetifyGrid系统和基础的样式都学习完了，官网文档里"),t("a",{attrs:{href:"https://vuetifyjs.com/en/framework/transitions#motion",target:"_blank",rel:"noopener noreferrer"}},[e._v("过渡"),t("OutboundLink")],1),e._v("的部分由于Vue里过渡基本没怎么用过，暂且先放一放。经过一些初步的使用，发现Vuetify相比原来的纯CSS库，在HTML结构方面确实简明了很多。")]),e._v(" "),t("p",[e._v("下边就来看看各个组件的使用了。")])])}),[],!1,null,null,null);v.default=o.exports}}]);