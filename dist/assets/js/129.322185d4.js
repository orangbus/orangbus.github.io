(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{638:function(n,e,t){"use strict";t.r(e);var a=t(11),s=Object(a.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("blockquote",[t("p",[n._v("本文由 "),t("a",{attrs:{href:"http://ksria.com/simpread/",target:"_blank",rel:"noopener noreferrer"}},[n._v("简悦 SimpRead"),t("OutboundLink")],1),n._v(" 转码， 原文地址 "),t("a",{attrs:{href:"https://lilinchao.com/archives/1093.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("lilinchao.com"),t("OutboundLink")],1)])]),n._v(" "),t("h3",{attrs:{id:"一、配置详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、配置详解"}},[n._v("#")]),n._v(" 一、配置详解")]),n._v(" "),t("p",[t("strong",[n._v("1.1 input配置段")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("#每一个prospectors，起始于一个破折号”-“\nfilebeat.prospectors:\n\n#默认log，从日志文件读取每一行。stdin，从标准输入读取\n- input_type: log\n\n#日志文件路径列表，可用通配符，不递归\npaths:     - /var/log/*.log\n\n#编码，默认无，plain(不验证或者改变任何输入), latin1, utf-8, utf-16be-bom, utf-16be, utf-16le, big5, gb18030, gbk, hz-gb-2312, euc-kr, euc-jp, iso-2022-jp, shift-jis\nencoding: plain\n\n#匹配行，后接一个正则表达式列表，默认无，如果启用，则filebeat只输出匹配行，如果同时指定了多行匹配，仍会按照include_lines做过滤\ninclude_lines: [‘^ERR’, ‘^WARN’]\n\n#排除行，后接一个正则表达式的列表，默认无\n#排除文件，后接一个正则表达式的列表，默认无\nexclude_lines: [“^DBG”]\n\n#排除更改时间超过定义的文件，时间字符串可以用2h表示2小时，5m表示5分钟，默认0\nignore_older: 5m\n\n#该type会被添加到type字段，对于输出到ES来说，这个输入时的type字段会被存储，默认log\ndocument_type: log\n\n#prospector扫描新文件的时间间隔，默认10秒\nscan_frequency: 10s\n\n#单文件最大收集的字节数，单文件超过此字节数后的字节将被丢弃，默认10MB，需要增大，保持与日志输出配置的单文件最大值一致即可\nmax_bytes: 10485760\n\n#多行匹配模式，后接正则表达式，默认无\nmultiline.pattern: ^[\n\n#多行匹配模式后配置的模式是否取反，默认false\nmultiline.negate: false\n\n#定义多行内容被添加到模式匹配行之后还是之前，默认无，可以被设置为after或者before\nmultiline.match: after\n\n#单一多行匹配聚合的最大行数，超过定义行数后的行会被丢弃，默认500\nmultiline.max_lines: 500\n\n#多行匹配超时时间，超过超时时间后的当前多行匹配事件将停止并发送，然后开始一个新的多行匹配事件，默认5秒\nmultiline.timeout: 5s\n\n#可以配置为true和false。配置为true时，filebeat将从新文件的最后位置开始读取，如果配合日志轮循使用，新文件的第一行将被跳过\ntail_files: false\n\n#当文件被重命名或被轮询时关闭重命名的文件处理。注意：潜在的数据丢失。请务必阅读并理解此选项的文档。默认false\nclose_renamed: false\n\n#如果文件不存在，立即关闭文件处理。如果后面文件又出现了，会在scan_frequency之后继续从最后一个已知position处开始收集，默认true\nclose_removed: true\n\n#每个prospectors的开关，默认true\nenabled: true\n\n#后台事件计数阈值，超过后强制发送，默认2048\nfilebeat.spool_size: 2048\n\n#后台刷新超时时间，超过定义时间后强制发送，不管spool_size是否达到，默认5秒\nfilebeat.idle_timeout: 5s\n\n#注册表文件，同logstash的sincedb，记录日志文件信息，如果使用相对路径，则意味着相对于日志数据的路径\nfilebeat.registry_file: ${path.data}/registry\n\n#定义filebeat配置文件目录，必须指定一个不同于filebeat主配置文件所在的目录，目录中所有配置文件中的全局配置会被忽略\nfilebeat.config_dir \n")])])]),t("p",[t("strong",[n._v("1.2 通用配置段")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("#配置发送者名称，如果不配置则使用hostname\nname:\n\n#标记tag，可用于分组\ntags: [“service-X”, “web-tier”]\n\n#添加附件字段，可以使values，arrays，dictionaries或者任何嵌套数据\nfields:\n\n#处理管道中单个事件内的队列大小，默认1000\nqueue_size: 1000\n\n#设置最大CPU数，默认为CPU核数\nmax_procs: \n")])])]),t("p",[t("strong",[n._v("1.3 Path配置段")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("#filebeat安装目录，为其他所有path配置的默认基本路径，默认为filebeat二进制文件的本地目录\npath.home:\n\n#filebeat配置路径，主配置文件和es模板的默认基本路径，默认为filebeat家目录\npath.config: ${path.home}\n\n#filebeat数据存储路径，默认在filebeat家目录下\npath.data: ${path.home}/data\n\n#filebeat日志存储路径，默认在filebeat家目录下\npath.logs: ${path.home}/logs \n")])])]),t("p",[t("strong",[n._v("1.4 logging配置段")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("#有3个可配置的filebeat日志输出选项：syslog,file,stderr\n#windows默认输出到file\n\n#设定日志级别，可设置级别有critical, error, warning, info, debug\nlogging.level: info\n\n#开启debug输出的选择组件，开启所有选择使用[“*”],其他可用选择为”beat”,”publish”,”service”\nlogging.selectors: [ ]\n\n#输出所有日志到syslog，默认为false\nlogging.to_syslog: true\n\n#定期记录filebeat内部性能指标，默认true\nlogging.metrics.enabled: true\n\n#记录内部性能指标的周期，默认30秒\nlogging.metrics.period: 30s\n\n#输出所有日志到file，默认true\nlogging.to_files: true\n\n#日志输出的文件配置\nlogging.files:\n\n#配置日志输出路径，默认在家目录的logs目录\npath: /var/log/filebeat\n\n#filebeat #日志文件名\nname:\n\n#日志轮循大小，默认10MB\nrotateeverybytes: 10485760\n\n#日志轮循文件保存数量，默认7\nkeepfiles: 7 \n")])])]),t("h3",{attrs:{id:"二、模块配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、模块配置"}},[n._v("#")]),n._v(" 二、模块配置")]),n._v(" "),t("p",[t("strong",[n._v("2.1 输出到Kafka集群中")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("filebeat.inputs:\n- type: log\n  enabled: true\n  paths:\n    - /home/admin/taobao-tomcat-production-7.0.59.3/logs/catalina.out\n  fields:\n    local_type: 'tomcat' #这些都是附加的标签\n    local_ip: 1.1.1.1\n    local_host: 'prod_商品_1'\n  fields_under_root: true #将标签放到顶头，不然在message字段里\n  multiline.pattern: '^20' #20开头和20开头之间的算作一行，具体根据日志情况\n  multiline.negate: true\n  multiline.match: after\n\nfilebeat.config.modules:\n  path: ${path.config}/modules.d/*.yml\n  reload.enabled: false\nsetup.template.settings:\n  index.number_of_shards: 3\n\noutput.kafka:\n  enabled: true\n  hosts: [\"1.1.1.1:9092\",\"1.1.1.2:9092\",\"1.1.1.3:9092\"] #kafka集群地址\n  topic: 'tomcat-server-log' #topic名 \n")])])]),t("p",[t("strong",[n._v("2.2 输出到elasticsearch")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("#启用模块\nenabled: true\n\n#ES地址\nhosts: [“localhost:9200”]\n\n#gzip压缩级别，默认0，不压缩，压缩耗CPU\ncompression_level: 0\n\n#每个ES的worker数，默认1\nworker: 1\n\n#可选配置，ES索引名称，默认filebeat-%{+yyyy.MM.dd}\nindex: “filebeat-%{+yyyy.MM.dd}”\n\n#可选配置，输出到ES接收节点的pipeline，默认无\npipeline: “”\n\n#可选的，HTTP路径，默认无\npath: “/elasticsearch”\n\n#http代理服务器地址，默认无\nproxy_url: http://proxy:3128\n\n#ES重试次数，默认3次，超过3次后，当前事件将被丢弃\nmax_retries: 3\n\n#对一个单独的ES批量API索引请求的最大事件数,默认50\nbulk_max_size: 50\n\n#到ES的http请求超时时间,默认90秒\ntimeout: 90 \n")])])]),t("p",[t("strong",[n._v("2.3 输出到logstash")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("#启用模块\nenabled: true\n\n#logstash地址\nhosts: [“localhost:5044”]\n\n#每个logstash的worker数，默认1\nworker: 1\n\n#压缩级别，默认3\ncompression_level: 3\n\n#负载均衡开关，在不同的logstash间负载\nloadbalance: true\n\n#在处理新的批量期间，异步发送至logstash的批量次数\npipelining: 0\n\n#可选配置，索引名称，默认为filebeat\nindex: ‘filebeat’\n\n#socks5代理服务器地址\nproxy_url: socks5://user:password@socks5-server:2233\n\n#使用代理时是否使用本地解析，默认false\nproxy_use_local_resolver: false \n")])])]),t("p",[t("strong",[n._v("2.4 输出到Redis")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("#启用模块\nenabled: true\n\n#logstash地址\nhosts: [“localhost:6379”]\n\n#redis地址，地址为一个列表，如果loadbalance开启，则负载到里表中的服务器，当一个redis服务器不可达，事件将被分发到可到达的redis服务器\nworker: 1\n\n#redis端口，如果hosts内未包含端口信息，默认6379\nport: 6379\n\n#事件发布到redis的list或channel，默认filebeat\nkey: filebeat\n\n#redis密码，默认无\npassword:\n\n#redis的db值，默认0\ndb: 0\n\n#发布事件使用的redis数据类型，如果为list，使用RPUSH命令（生产消费模式）。如果为channel，使用PUBLISH命令{发布订阅模式}。默认为list\ndatatype: list\n\n#为每个redis服务器启动的工作进程数，会根据负载均衡配置递增\nworker: 1\n\n#负载均衡，默认开启\nloadbalance: true\n\n#redis连接超时时间，默认5s\ntimeout: 5s\n\n#filebeat会忽略此设置，并一直重试到全部发送为止，其他beat设置为0即忽略，默认3\nmax_retries: 3\n\n#对一个redis请求或管道批量的最大事件数，默认2048\nbulk_max_size: 2048\n\n#socks5代理地址，必须使用socks5://\nproxy_url:\n\n#使用代理时是否使用本地解析，默认false\nproxy_use_local_resolver: fals \n")])])]),t("p",[t("strong",[n._v("2.5 读取Nginx日志输出到ES")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('filebeat.inputs:\n- type: log\n  enabled: true\n  paths:\n    - /soft/nginx/*.log\n  tags: ["nginx"]\n  fields_under_root: false \nsetup.template.settings:\n  index.number_of_shards: 1\noutput.elasticsearch:\n  hosts: ["127.0.0.1:9200"] \n')])])])])}),[],!1,null,null,null);e.default=s.exports}}]);