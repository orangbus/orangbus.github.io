(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{625:function(t,a,n){"use strict";n.r(a);var s=n(11),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[n("img",{attrs:{src:"/images/20200211153601387.png",alt:"在这里插入图片描述"}})]),t._v(" "),n("p",[t._v("配套仓库地址："),n("a",{attrs:{href:"https://gitee.com/orangbus/mysql-cluster",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gitee.com/orangbus/mysql-cluster"),n("OutboundLink")],1)]),t._v(" "),n("h1",{attrs:{id:"安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("docker pull haproxy\n")])])]),n("h2",{attrs:{id:"配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[t._v("#")]),t._v(" 配置文件")]),t._v(" "),n("p",[t._v("配置文件名：haproxy.cfg")]),t._v(" "),n("p",[t._v("可参考：https://zhangge.net/5125.html")]),t._v(" "),n("div",{staticClass:"language-cfg extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("#configure haproxy.cfg\n\nglobal\n\t#工作目录\n\tchroot /usr/local/etc/haproxy\n\t#日志文件，使用rsyslog服务中local5日志设备（/var/log/local5），等级info\n\tlog 127.0.0.1 local5 info\n\t#守护进程运行\n\tdaemon\n\ndefaults\n\tlog\tglobal\n\tmode\thttp\n\t#日志格式\n\toption\thttplog\n\t#日志中不记录负载均衡的心跳检测记录\n\toption\tdontlognull\n    #连接超时（毫秒）\n\ttimeout connect 5000\n    #客户端超时（毫秒）\n\ttimeout client  50000\n\t#服务器超时（毫秒）\n    timeout server  50000\n\n#监控界面\nlisten  admin_stats\n\t#监控界面的访问的IP和端口\n\tbind  0.0.0.0:1080\n\t#访问协议\n    mode        http\n\t#URI相对地址\n    stats uri   /admin\n\t#统计报告格式\n    stats realm     Global\\ statistics\n\t#登陆帐户信息\n    stats auth  admin:admin666\n#数据库负载均衡\nlisten  proxy-mysql\n\t#访问的IP和端口\n\tbind  0.0.0.0:3320\n    #网络协议\n\tmode  tcp\n\t#负载均衡算法（轮询算法）\n\t#轮询算法：roundrobin\n\t#权重算法：static-rr\n\t#最少连接算法：leastconn\n\t#请求源IP算法：source\n    balance  roundrobin\n\t#日志格式\n    option  tcplog\n\t#在MySQL中创建一个没有权限的haproxy用户，密码为空。Haproxy使用这个账户对MySQL数据库心跳检测\n    option  mysql-check user haproxy\n    server  MySQL_1 172.28.0.2:3306 check weight 1 maxconn 2000\n    server  MySQL_2 172.28.0.3:3306 check weight 1 maxconn 2000\n\tserver  MySQL_3 172.28.0.4:3306 check weight 1 maxconn 2000\n\t#使用keepalive检测死链\n    option  tcpka\n")])])]),n("h2",{attrs:{id:"创建容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建容器"}},[t._v("#")]),t._v(" 创建容器")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("docker run -it -d\n-p 4001:8888 -p 4002:3306\n-v /${pwd}/config/haproxy:/user/local/haproxy\n--name haproxy --privileged\n--net=net1 # 这里的网络需要和docker-pxc集群的网络是一样的，这样才能通信\nhaproxy\n\n// 进入haproxy容器启动haproxy\nhaproxy -f paht/to/haproxy.cfg\n")])])]),n("h2",{attrs:{id:"haproxy连接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#haproxy连接"}},[t._v("#")]),t._v(" haproxy连接")]),t._v(" "),n("p",[t._v("Port：4002")]),t._v(" "),n("p",[t._v("web：8888")]),t._v(" "),n("h2",{attrs:{id:"心跳检测"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#心跳检测"}},[t._v("#")]),t._v(" 心跳检测")]),t._v(" "),n("p",[t._v("创建一个没有权限的用户，用于haproxy的心跳检测使用")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("CREATE USER 'haproxy'@'%' identified BY '';\n")])])]),n("h1",{attrs:{id:"数据库热备份"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据库热备份"}},[t._v("#")]),t._v(" 数据库热备份")]),t._v(" "),n("p",[t._v("xtrabackup")]),t._v(" "),n("p",[t._v("备份数据卷")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("docker volume create backup\n")])])]),n("p",[t._v("停止某个节点")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("docker stop node1\n")])])]),n("p",[t._v("删除这个容器")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("docker rm node1\n")])])]),n("p",[t._v("虽然删除了这个容器，但是这个容器的数据库我们已经做了持久化存储了，当我们在重新启动一个容器加入到pxc集群的时候，只需要指定之前的node1的数据卷，name之前的数据依旧是存在的")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("docker run -d \n-p 3306:3306\n-e MYSQL_ROOT_PASSWORD=123456\n-e CLUSTER_NAME=PXC\n-e XTRABACKUP_PASSWORD=123456\n-v v1:/var/lib/mysql # 指定之前删除的那个容器的数据款\n-v backup:/data # 新增的备份数据卷\n--privileged\n-e CLUSTER_JOIN=node2 # 加入到pxc集群里面的任意一个节点\n--name=node1 --net=net1\n--ip=172.18.0.2 pxc\n\n")])])]),n("h2",{attrs:{id:"安装xtraback"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装xtraback"}},[t._v("#")]),t._v(" 安装xtraback")]),t._v(" "),n("p",[t._v("在容器中安装备份工具")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("apt-get intall percona-xtrabackup-24\n")])])]),n("p",[t._v("备份数据")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("innobackupex --user=root --password=123456 /data/back/full\n")])])]),n("p",[t._v("数据还原")]),t._v(" "),n("p",[t._v("先删除之前的pxc集群，重新新建一个pxc集群")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("rm -rf /var/lib/mysql/*\n")])])]),n("p",[t._v("提交为执行完的事务")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("innobackupex --user=root --password=123456 --apple-back /data/baclup/full/2021-01-01\n")])])]),n("p",[t._v("冷备份")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("innobackupex --user=root --password=123456 --copy-back /data/baclup/full/2021-01-01\n")])])]),n("h2",{attrs:{id:"keepalived"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#keepalived"}},[t._v("#")]),t._v(" keepalived")]),t._v(" "),n("h3",{attrs:{id:"haproxy安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#haproxy安装"}},[t._v("#")]),t._v(" haproxy安装")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" keeplived\n")])])]),n("h3",{attrs:{id:"配置文件-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置文件-2"}},[t._v("#")]),t._v(" 配置文件")]),t._v(" "),n("blockquote",[n("p",[t._v("/etc/keepalived/keepalived.conf")])]),t._v(" "),n("p",[t._v("主服务")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code")])]),n("p",[t._v("备用")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code")])]),n("p",[t._v("启动")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" keepalived start\n")])])]),n("h2",{attrs:{id:"负载均衡-haproxy"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡-haproxy"}},[t._v("#")]),t._v(" 负载均衡-HAProxy")]),t._v(" "),n("p",[t._v("HAProxy提供高可用性、负载均衡以及基于TCP和HTTP应用的代理，支持虚拟主机，它是免费、快速并且可靠的一种解决方案,包括Twitter，Reddit，StackOverflow，GitHub在内的多家知名互联网公司在使用。HAProxy实现了一种事件驱动、单一进程模型，此模型支持非常大的并发连接数。")]),t._v(" "),n("h3",{attrs:{id:"_3-5-1-安装haproxy"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-1-安装haproxy"}},[t._v("#")]),t._v(" 3.5.1 安装HAProxy")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("//下载依赖包\nyum install gcc vim wget\n//上传haproxy源码包\n//解压\ntar -zxvf haproxy-1.6.5.tar.gz -C /usr/local\n//进入目录、进行编译、安装\ncd /usr/local/haproxy-1.6.5\nmake TARGET=linux31 PREFIX=/usr/local/haproxy\nmake install PREFIX=/usr/local/haproxy\nmkdir /etc/haproxy\n//赋权\ngroupadd -r -g 149 haproxy\nuseradd -g haproxy -r -s /sbin/nologin -u 149 haproxy\n//创建haproxy配置文件\nmkdir /etc/haproxy\nvim /etc/haproxy/haproxy.cfg\n")])])]),n("h3",{attrs:{id:"_3-5-2-配置haproxy"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-2-配置haproxy"}},[t._v("#")]),t._v(" 3.5.2 配置HAProxy")]),t._v(" "),n("h3",{attrs:{id:"配置文件路径：-etc-haproxy-haproxy-cfg"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置文件路径：-etc-haproxy-haproxy-cfg"}},[t._v("#")]),t._v(" 配置文件路径：/etc/haproxy/haproxy.cfg")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("#logging options\nglobal\n\tlog 127.0.0.1 local0 info\n\tmaxconn 5120\n\tchroot /usr/local/haproxy\n\tuid 99\n\tgid 99\n\tdaemon\n\tquiet\n\tnbproc 20\n\tpidfile /var/run/haproxy.pid\n\ndefaults\n\tlog global\n\t\n\tmode tcp\n\n\toption tcplog\n\toption dontlognull\n\tretries 3\n\toption redispatch\n\tmaxconn 2000\n\tcontimeout 5s\n   \n     clitimeout 60s\n\n     srvtimeout 15s\t\n#front-end IP for consumers and producters\n\nlisten rabbitmq_cluster\n\tbind 0.0.0.0:5672\n\t\n\tmode tcp\n\t#balance url_param userid\n\t#balance url_param session_id check_post 64\n\t#balance hdr(User-Agent)\n\t#balance hdr(host)\n\t#balance hdr(Host) use_domain_only\n\t#balance rdp-cookie\n\t#balance leastconn\n\t#balance source //ip\n\t\n\tbalance roundrobin\n        server node1 127.0.0.1:5673 check inter 5000 rise 2 fall 2\n        server node2 127.0.0.1:5674 check inter 5000 rise 2 fall 2\n\nlisten stats\n\tbind 172.16.98.133:8100\n\tmode http\n\toption httplog\n\tstats enable\n\tstats uri /rabbitmq-stats\n\tstats refresh 5s\n")])])]),n("h3",{attrs:{id:"启动haproxy负载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启动haproxy负载"}},[t._v("#")]),t._v(" 启动HAproxy负载")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/usr/local/haproxy/sbin/haproxy -f /etc/haproxy/haproxy.cfg\n//查看haproxy进程状态\nps -ef | grep haproxy\n\n访问如下地址对mq节点进行监控\nhttp://172.16.98.133:8100/rabbitmq-stats\n")])])]),n("p",[t._v("代码中访问mq集群地址，则变为访问haproxy地址:5672")]),t._v(" "),n("h1",{attrs:{id:"docker-compose"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[t._v("#")]),t._v(" docker-compose")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.5"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pxc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("driver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bridge\n\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("driver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" local\n\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" perconalab/percona"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("xtradb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cluster"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.7")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${node_name}"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("privileged")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${port}:3306"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" MYSQL_ROOT_PASSWORD=$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("password"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CLUSTER_NAME=PXC_ClUSTER\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" XTRABACKUP_PASSWORD=$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("password"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("node1_data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/lib/mysql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("rw\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" pxc\n\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" perconalab/percona"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("xtradb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cluster"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.7")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node2"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("privileged")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" MYSQL_ROOT_PASSWORD=$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("password"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("wq\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CLUSTER_NAME=PXC_ClUSTER\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" XTRABACKUP_PASSWORD=$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("password"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CLUSTER_JOIN=$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("node_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("node2_data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/lib/mysql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("rw\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3307:3306"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("depends_on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" node1\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" pxc\n\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" perconalab/percona"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("xtradb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cluster"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.7")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node3"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("privileged")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" MYSQL_ROOT_PASSWORD=$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("password"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CLUSTER_NAME=PXC_ClUSTER\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" XTRABACKUP_PASSWORD=$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("password"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CLUSTER_JOIN=$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("node_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("node3_data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/lib/mysql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("rw\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3308:3306"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("depends_on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" node2\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" pxc\n\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ha")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" haproxy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.9.3\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" haproxy\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 4001"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4001")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 4002"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4002")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./haproxy/haproxy.cfg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/local/etc/haproxy/haproxy.cfg\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("links")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" node1\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" node2\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" node3\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" pxc\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("# 数据库账号密码\npassword=admin666\nport=3306\n\nnode_name=node1\n\n# 数据保存位置\nnode1_data=./data/node1\nnode2_data=./data/node2\nnode3_data=./data/node3\n")])])]),n("p",[t._v("haproxy.cfg配置文件")]),t._v(" "),n("div",{staticClass:"language-cfg extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("#configure haproxy.cfg\n\nglobal\n#工作目录\nchroot /usr/local/etc/haproxy\n#日志文件，使用rsyslog服务中local5日志设备（/var/log/local5），等级info\nlog 127.0.0.1 local5 info\n#守护进程运行\ndaemon\n\ndefaults\nlog\tglobal\nmode\thttp\n#日志格式\noption\thttplog\n#日志中不记录负载均衡的心跳检测记录\noption\tdontlognull\n#连接超时（毫秒）\ntimeout connect 5000\n#客户端超时（毫秒）\ntimeout client  50000\n#服务器超时（毫秒）\ntimeout server  50000\n\n#监控界面\nlisten  admin_stats\n#监控界面的访问的IP和端口\nbind  0.0.0.0:4001\n#访问协议\nmode        http\n#URI相对地址\nstats uri   /admin\n#统计报告格式\nstats realm     Global\\ statistics\n#登陆帐户信息\nstats auth  admin:admin666\n#数据库负载均衡\nlisten  proxy-mysql\n#访问的IP和端口\nbind  0.0.0.0:4002\n#网络协议\nmode  tcp\n#负载均衡算法（轮询算法）\n#轮询算法：roundrobin\n#权重算法：static-rr\n#最少连接算法：leastconn\n#请求源IP算法：source\nbalance  roundrobin\n#日志格式\noption  tcplog\n#在MySQL中创建一个没有权限的haproxy用户，密码为空。Haproxy使用这个账户对MySQL数据库心跳检测\noption  mysql-check user haproxy\nserver  MySQL_1 node1:3306 check weight 1 maxconn 2000 # 服务器名称+端口（3306，不是映射端口）\nserver  MySQL_2 node2:3306 check weight 1 maxconn 2000\nserver  MySQL_3 node3:3306 check weight 1 maxconn 2000\n#使用keepalive检测死链\noption  tcpka\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);